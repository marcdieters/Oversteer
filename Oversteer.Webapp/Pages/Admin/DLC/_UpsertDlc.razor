@using Oversteer.Models

@if (ShowLoader)
{
    <div class="loader"></div>
}

@if (ShowDialog)
{
    <div class="modal fade show d-block" tabindex="0" role="dialog" style="z-index:11">
        <div class="modal-dialog modal-dialog-scrollable modal-xl" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        @if (string.IsNullOrEmpty(Dlc.Name))
                        {
                            <text>Add new Dlc</text>
                        }
                        else
                        {
                            <text>Edit @Dlc.Name</text>
                        }
                    </h5>
                    <button type="button" class="close" @onclick="@Close" data-dimdiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    <EditForm Model="@Dlc" OnValidSubmit="@HandleValidSubmit">

                        <div class="form-group row">
                            <label class="col-form-label">Name</label>
                            <InputText id="comment" class="form-control" @bind-Value="@Dlc.Name" placeholder="Enter a name"></InputText>
                                <ValidationMessage For="@(() => Dlc.Name)" />
                        </div>

                        <div class="form-group row">
                            <label class="col-form-label">URL</label>
                            <InputText id="comment" class="form-control" @bind-Value="@Dlc.Url" placeholder="Enter an URL"></InputText>
                            <ValidationMessage For="@(() => Dlc.Url)" />
                        </div>

                        <div class="form-group row">
                            <label class="col-form-label">Free content</label>
                            <div class="form-check form-switch">
                                <InputCheckbox class="form-check-input" type="checkbox" role="switch" id="RunHypervisorInventory" @bind-Value="@Dlc.Free"></InputCheckbox>
                            </div>
                            <ValidationMessage For="@(() => Dlc.Free)" />
                        </div>

                        <div class="form-group">
                            <label class="col-form-label">Content type</label>
                            @{
                                var types = Enum.GetValues(typeof(ContentType)).Cast<ContentType>().ToList();
                                types = types.OrderBy(l => l).ToList();
                            }
                            <InputSelect class="form-select" @bind-Value="@Dlc.ContentType">
                                <option value="-1" selected>--select--</option>
                                @foreach (var type in types)
                                {
                                    <option value="@type">@type</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => Dlc.ContentType)" />
                        </div>

                        <div class="form-group">
                            <label class="col-form-label">Race sim</label>
                            <InputSelect class="form-select" @bind-Value="@Dlc.RaceSimId">
                                <option value="0" selected>--select--</option>
                                @foreach (var sim in RaceSims)
                                {
                                    <option value="@sim.Id">@sim.Name</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => Dlc.RaceSimId)" />
                        </div>

                        <DataAnnotationsValidator />
                        <Microsoft.AspNetCore.Components.Forms.ValidationSummary />

                        <button type="submit" class="btn btn-primary">Save</button>
                        <a class="btn btn-outline-primary" @onclick="@Close">Close</a>

                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}
